version: "3"

services:

  audit:
    image: quay.io/ukhomeofficedigital/hocs-audit:${AUDIT_TAG:-latest}
    restart: on-failure
    ports:
      - "8087:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx128m"
      SPRING_PROFILES_ACTIVE: "development, local"
      SERVER_PORT: 8080
      DB_HOST: "postgres"
      HOCS_INFO_SERVICE: "http://info:8080"
      LOCALSTACK_HOST: "localstack"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - postgres
      - localstack

  camunda-tools:
    image: quay.io/ukhomeofficedigital/hocs-camunda-tools:latest
    restart: on-failure
    ports:
      - "8093:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx128m"
      DB_HOST: "postgres"
      CAMUNDA_ADMIN_USERNAME: "admin"
      CAMUNDA_ADMIN_PASSWORD: "admin"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - postgres

  clamav:
    image: mockserver/mockserver:5.13.2
    command: -logLevel INFO -serverPort 8080
    restart: on-failure
    ports:
      - "8086:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx64m"
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.json
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/mockserver.json
    volumes:
      - ${PWD}/ci/clamav_mock:/config

  converter:
    image: quay.io/ukhomeofficedigital/hocs-docs-converter:${DOCS_CONVERTER_TAG:-latest}
    restart: on-failure
    ports:
      - "8084:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx128m"
      SERVER_PORT: 8080
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      timeout: 5s
      retries: 40

  case_creator:
    image: quay.io/ukhomeofficedigital/hocs-case-creator:${CASE_CREATOR_TAG:-latest}
    restart: on-failure
    ports:
      - "8092:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx128m"
      SPRING_PROFILES_ACTIVE: "development, local"
      SERVER_PORT: 8080
      LOCALSTACK_CONFIG_HOST:
      AWS_LOCAL_HOST: "localstack"
      AWS_SQS_REGION: "eu-west-2"
      AWS_ACCOUNT_ID: "1234"
      CASE_CREATOR_WORKFLOW_SERVICE: http://workflow:8080
      CASE_CREATOR_CASE_SERVICE: http://casework:8080
      CASE_CREATOR_BASICAUTH: "UNSET"
      CASE_CREATOR_UKVI_COMPLAINT_USER: "22ca514d-c205-47a0-9e38-68daee4c1299"
      CASE_CREATOR_UKVI_COMPLAINT_TEAM: "08e30ffc-2087-ff3a-b19b-343a88491347"
      CASE_CREATOR_UKVI_COMPLAINT_GROUP: "/COMP_CCH_zqxmzQ6iEkTRw"
      CASE_CREATOR_SQS_ACCESS_KEY: "1234"
      CASE_CREATOR_SQS_SECRET_KEY: "1234"
      CASE_CREATOR_UKVI_COMPLAINT_QUEUE_NAME: "ukvi-complaint-queue"
      CASE_CREATOR_UKVI_COMPLAINT_DL_QUEUE_NAME: "ukvi-complaint-queue-dlq"
      AUDIT_SNS_ACCESS_KEY: "1234"
      AUDIT_SNS_SECRET_KEY: "1234"
      AUDIT_SNS_TOPIC_NAME: "hocs-audit-topic"
      DOCUMENT_S3_ACCESS_KEY: "1234"
      DOCUMENT_S3_SECRET_KEY: "1234"
      DOCUMENT_S3_UNTRUSTED_BUCKET_NAME: "untrusted-bucket"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - casework
      - localstack
      - workflow

  casework:
    image: quay.io/ukhomeofficedigital/hocs-casework:${CASEWORK_TAG:-latest}
    restart: on-failure
    ports:
      - "8082:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx256m"
      SPRING_PROFILES_ACTIVE: "development, local"
      SERVER_PORT: 8080
      DB_HOST: "postgres"
      LOCALSTACK_CONFIG_HOST: "localstack"
      AWS_LOCAL_HOST: "localstack"
      NOTIFY_QUEUE_NAME: "notify-queue"
      NOTIFY_QUEUE_DLQ_NAME: "notify-queue-dlq"
      HOCS_INFO_SERVICE: "http://info:8080"
      HOCS_AUDITSERVICE: "http://audit:8080"
      HOCS_SEARCH_SERVICE: "http://search:8080"
      HOCS_DOCUMENT_SERVICE: "http://documents:8080"
      AUDIT_TOPIC_NAME: "hocs-audit-topic"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - audit
      - documents
      - info
      - localstack
      - postgres

  data_migration:
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/hocs/${HOCS_DATA_REPO:-hocs-data}:${HOCS_DATA_TAG:-latest}
    restart: on-failure
    environment:
      FLYWAY_URL: jdbc:postgresql://postgres:5432/postgres
      FLYWAY_USER: root
      FLYWAY_PASSWORD: dev
    networks:
      - hocs-network
    depends_on:
      - postgres

  documents:
    image: quay.io/ukhomeofficedigital/hocs-docs:${DOCS_TAG:-latest}
    restart: on-failure
    ports:
      - "8083:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx128m"
      SPRING_PROFILES_ACTIVE: "development, local, postgres"
      SPRING_FLYWAY_SCHEMAS: "document"
      SERVER_PORT: 8080
      DOCS_QUEUE_NAME: "document-queue"
      DOCS_QUEUE_DLQ_NAME: "document-queue-dlq"
      CASE_QUEUE_NAME: "case-queue"
      CASE_QUEUE_DLQ_NAME: "case-queue-dlq"
      DOCS_TRUSTEDS3BUCKETNAME: "trusted-bucket"
      DOCS_UNTRUSTEDS3BUCKETNAME: "untrusted-bucket"
      HOCSCONVERTER_ROOT: "http4://converter:8080"
      CLAMAV_ROOT: "http4://clamav:8080"
      DB_HOST: "postgres"
      AWS_LOCAL_HOST: "localstack"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - clamav
      - converter
      - localstack
      - postgres

  frontend:
    image: quay.io/ukhomeofficedigital/hocs-frontend:${FRONTEND_TAG:-latest}
    restart: on-failure
    ports:
      - "8080:8080"
    networks:
      - hocs-network
    environment:
      USE_CLIENTSIDE: "true"
      WORKFLOW_SERVICE: http://workflow:8080
      CASEWORK_SERVICE: http://casework:8080
      INFO_SERVICE: http://info:8080
      DOCUMENT_SERVICE: http://documents:8080
      ALLOWED_FILE_EXTENSIONS: "doc,docx,txt,rtf,html,pdf,jpg,jpeg,tif,tiff,png,bmp,gif,xls,xlsx,msg"
      DOCUMENT_BULK_LIMIT: 40
      VALID_DAYS_RANGE: 180
      S3_BUCKET: "untrusted-bucket"
      S3_ENDPOINT: http://localstack:4566
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - casework
      - documents
      - info
      - localstack
      - workflow

  info:
    image: quay.io/ukhomeofficedigital/hocs-info-service:${INFO_TAG:-latest}
    restart: on-failure
    ports:
      - "8085:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx128m"
      SPRING_PROFILES_ACTIVE: "development, local"
      SERVER_PORT: 8080
      DB_HOST: "postgres"
      CASE_QUEUE_NAME: "case-queue"
      CASE_QUEUE_DLQ_NAME: "case-queue-dlq"
      DOCS_QUEUE_NAME: "document-queue"
      DOCS_QUEUE_DLQ_NAME: "document-queue-dlq"
      NOTIFY_QUEUE_NAME: "notify-queue"
      NOTIFY_QUEUE_DLQ_NAME: "notify-queue-dlq"
      HOCS_CASE_SERVICE: "http://casework:8080"
      HOCS_DOCUMENT_SERVICE: "http://documents:8080"
      KEYCLOAK_SERVER_ROOT: "http://keycloak:8080"
      AWS_LOCAL_HOST: "localstack"
      AUDIT_QUEUE_NAME: "audit-queue"
      AUDIT_QUEUE_DLQ_NAME: "audit-queue-dlq"
      HOCS_AUDIT_SERVICE: "http://audit:8080"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - documents
      - data_migration
      - keycloak

  keycloak:
    image: quay.io/keycloak/keycloak:15.1.1
    restart: on-failure
    ports:
      - "9990:9990"
      - "9081:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx128m"
      KEYCLOAK_USER: root
      KEYCLOAK_PASSWORD: dev
      KEYCLOAK_IMPORT: /tmp/local-realm.json
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_PORT: 5432
      DB_DATABASE: postgres
      DB_USER: root
      DB_PASSWORD: dev
    healthcheck:
      test: "curl -f http://localhost:8080/auth/ || exit 1"
      timeout: 5s
      retries: 40
    volumes:
      - ${PWD}/ci/keycloak/local-realm.json:/tmp/local-realm.json
    depends_on:
      - postgres

  localstack:
    image: localstack/localstack:0.14.3
    restart: on-failure
    ports:
      - "4566:4566"
    networks:
      hocs-network:
        aliases:
          - localhost.localstack.cloud
    environment:
      HOSTNAME_EXTERNAL: localstack
      DEFAULT_REGION: eu-west-2
      SERVICES: sqs,sns,s3
      LOCALSTACK_HOSTNAME: "localhost.localstack.cloud"
      SQS_PROVIDER: "elasticmq"
    healthcheck:
      test: "bash -c 'AWS_ACCESS_KEY_ID=fake AWS_SECRET_ACCESS_KEY=fake awslocal s3 ls'"
      timeout: 5s
      retries: 40
    volumes:
      - ${PWD}/ci/localstack/0-install-dependencies.sh:/docker-entrypoint-initaws.d/0-install-dependencies.sh
      - ${PWD}/ci/localstack/1-setup-buckets.sh:/docker-entrypoint-initaws.d/1-setup-buckets.sh
      - ${PWD}/ci/localstack/2-setup-queues.sh:/docker-entrypoint-initaws.d/2-setup-queues.sh

  management-ui:
    image: quay.io/ukhomeofficedigital/hocs-management-ui:${MANAGEMENT_UI_TAG:-latest}
    restart: on-failure
    ports:
      - "8099:8080"
    networks:
      - hocs-network
    environment:
      USE_CLIENTSIDE: "true"
      CASEWORK_SERVICE: http://casework:8080
      INFO_SERVICE: http://info:8080
      DOCUMENT_SERVICE: http://documents:8080
      ALLOWED_FILE_EXTENSIONS: "doc,docx,txt,rtf,html,pdf,jpg,jpeg,tif,tiff,png,bmp,gif,xls,xlsx,msg"
      PORT: 8080
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - casework
      - documents
      - info
      - localstack

  notify:
    image: quay.io/ukhomeofficedigital/hocs-notify:${NOTIFY_TAG:-latest}
    restart: on-failure
    ports:
      - "8089:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx128m"
      SPRING_PROFILES_ACTIVE: "development, local"
      SERVER_PORT: 8080
      KEYCLOAK_SERVER_ROOT: "http://keycloak:8080"
      AWS_LOCAL_HOST: "localstack"
      HOCS_INFO_SERVICE: "http://info:8080"
      NOTIFY_QUEUE_NAME: "notify-queue"
      NOTIFY_QUEUE_DLQ_NAME: "notify-queue-dlq"
      NOTIFY_API_KEY: "aaaaaaaaaa-11111111-1111-1111-1111-111111111111-11111111-1111-1111-aaaa-aaaaaaaaaaaa"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - info
      - localstack
      - keycloak

  postgres:
    image: postgres:14-alpine
    command: [ "postgres", "-c", "log_statement=all" ]
    restart: on-failure
    ports:
      - "5432:5432"
    networks:
      - hocs-network
    environment:
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=md5"
      POSTGRES_USER: root
      POSTGRES_PASSWORD: dev
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root" ]
    tmpfs:
      - /var/lib/postgresql
    volumes:
      - ${PWD}/ci/db_setup:/docker-entrypoint-initdb.d

  refresh_members:
    image: quay.io/ukhomeofficedigital/hocs-base-image:latest
    command: ["wget", "-qo", "/dev/null", "http://info:8080/admin/member/refresh"]
    networks:
      - hocs-network
    depends_on:
      - info

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2017-latest
    restart: on-failure
    ports:
      - "5434:1433"
    networks:
      - hocs-network  
    environment:
      SA_PASSWORD: Development01
      ACCEPT_EULA: Y

  templates:
    image: quay.io/ukhomeofficedigital/hocs-templates:${TEMPLATES_TAG:-latest}
    restart: on-failure
    ports:
      - "8090:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx128m"
      SERVER_PORT: 8080
      HOCS_INFO_SERVICE: "http://info:8080"
      HOCS_CASE_SERVICE: "http://casework:8080"
      HOCS_DOCUMENTS_SERVICE: "http://documents:8080"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - casework
      - documents
      - info

  workflow:
    image: quay.io/ukhomeofficedigital/hocs-workflow:${WORKFLOW_TAG:-latest}
    restart: on-failure
    ports:
      - "8091:8080"
    networks:
      - hocs-network
    environment:
      JAVA_OPTS: "-Xms32m -Xmx256m"
      SPRING_PROFILES_ACTIVE: "development, local"
      SERVER_PORT: 8080
      CASE_QUEUE_NAME: "case-queue"
      CASE_QUEUE_DLQ_NAME: "case-queue-dlq"
      DOCS_QUEUE_NAME: "document-queue"
      DOCS_QUEUE_DLQ_NAME: "document-queue-dlq"
      HOCS_URL: "http://localhost:8080"
      HOCS_CASE_SERVICE: "http://casework:8080"
      HOCS_DOCUMENT_SERVICE: "http://documents:8080"
      HOCS_INFO_SERVICE: "http://info:8080"
      DB_HOST: "postgres"
      DB_SCHEMA_NAME: "workflow"
      AWS_LOCAL_HOST: "localstack"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      timeout: 5s
      retries: 40
    depends_on:
      - casework
      - documents
      - info
      - postgres

networks:
  hocs-network:
